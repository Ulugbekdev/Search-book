{"version":3,"file":"static/js/124.f0d4bce6.chunk.js","mappings":"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","sources":["component/SearchPage/Search/Search.jsx","component/PaginationCommon/PaginationCommon.jsx","component/SearchPage/SearchResult/SearchResult.jsx","component/SearchPage/SearchDetails/SearchDetails.jsx","component/Header/Header.jsx","component/SearchPage/SearchPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport LoadingButton from '@mui/lab/LoadingButton/LoadingButton';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getBooksBySearch } from '../../../redux/reducers/searchReducer';\r\n\r\nconst Search = (props) => {\r\n    const [search, setSearch] = useState('');\r\n    const [searchError, setSearchError] = useState('');\r\n    const [load, setload] = useState(false);\r\n    const books = useSelector(state => state.searchPage.books);\r\n    const dispatch = useDispatch();\r\n\r\n    const searchFormChange = async (e) => {\r\n        const searchValue = e.target.value;\r\n        if (search.length > 0) setSearchError('');\r\n        setSearch(searchValue);\r\n    } \r\n\r\n    const searchFormSubmit = async (e) => {\r\n        e.preventDefault(e);\r\n        const searchValue = e.target[0].value;\r\n        if (search.length === 0) setSearchError('Enter something');\r\n        setload(true);\r\n        await dispatch(getBooksBySearch(searchValue, books)).then(resolve => {}, reject => {\r\n            setSearchError(reject);\r\n        });\r\n        setload(false);\r\n    } \r\n\r\n    return (\r\n        <>\r\n            <Box\r\n                component='form'\r\n                sx={{\r\n                    '& > :not(style)': { m: 1 },\r\n                    mx: 'auto',\r\n                    width: 1,\r\n                    maxWidth: 500,\r\n                    display: 'flex',\r\n                    alignItems: 'start',\r\n                    py: '25px' \r\n                }}\r\n                noValidate\r\n                autoComplete='off'\r\n                onSubmit={(e) => searchFormSubmit(e)}\r\n            >\r\n                {searchError\r\n                    ? <TextField\r\n                        error\r\n                        size='small'\r\n                        fullWidth\r\n                        label='Login'\r\n                        variant='outlined'\r\n                        type='text'\r\n                        name='Search'\r\n                        value={search}\r\n                        onChange={(e) => searchFormChange(e)}\r\n                        helperText={searchError}/>\r\n                    : <TextField\r\n                        fullWidth\r\n                        size='small'\r\n                        label='Search'\r\n                        variant='outlined'\r\n                        type='text'\r\n                        value={search}\r\n                        onChange={(e) => searchFormChange(e)}/>\r\n                }\r\n                <LoadingButton size='medium' loading={load} loadingIndicator=\"Searching...\" variant=\"contained\" type='submit'>\r\n                    Search\r\n                </LoadingButton>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Search;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getBooks } from '../../redux/reducers/searchReducer';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport { Stack } from '@mui/material';\r\n\r\nconst PaginationCommon = ({booksTotalItems, maxTotalBooks}) => {\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getBooks(maxTotalBooks, currentPage));\r\n    }, [currentPage]);\r\n\r\n    const commonCountPage = Math.ceil(booksTotalItems / maxTotalBooks) - 1;\r\n\r\n    return (\r\n        <>\r\n            <Stack>\r\n                <Pagination\r\n                    count={commonCountPage}\r\n                    variant='outlined'\r\n                    size='large'\r\n                    color='primary'\r\n                    sx={{ py: '25px', mx: 'auto' }}\r\n                    onChange={(_, currentNum) => setCurrentPage(currentNum)} />\r\n            </Stack>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaginationCommon;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport { Grid } from '@mui/material';\r\nimport PaginationCommon from '../../PaginationCommon/PaginationCommon';\r\n\r\nconst SearchResult = (props) => {\r\n    const books = useSelector(state => state.searchPage.books);\r\n    const searchBooks = useSelector(state => state.searchPage.booksResultSearch);\r\n    const maxTotalBooks = useSelector(state => state.searchPage.maxTotalBooks);\r\n    const booksTotalItems = useSelector(state => state.searchPage.booksTotalItems);\r\n\r\n    const onClickBook = async (link) => {\r\n        props.getDetailsInfo(link);\r\n    }\r\n\r\n    const booksArray = (searchBooks.length > 0 ? searchBooks : books).map((item, key) => (\r\n        <Grid item xs={12} sm={6} md={3} key={item.key}>\r\n            <Card sx={{backgroundColor: '#282c34', borderRadius: '10px' }}>\r\n                <CardMedia\r\n                    component='img'\r\n                    height='200'\r\n                    image={item.volumeInfo.imageLinks.smallThumbnail}\r\n                    alt={item.volumeInfo.title}\r\n                />\r\n                <CardContent sx={{ height: '150px', backgroundColor: 'inherit' }}>\r\n                    <Typography gutterBottom variant='h6' component='div'>\r\n                        {item.volumeInfo.title}\r\n                    </Typography>\r\n                    <Typography gutterBottom variant='subtitle1' component='div'>\r\n                        {item.volumeInfo.publishedDate}\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions sx={{backgroundColor: 'inherit'}}>\r\n                    <Button size='small' variant='contained' onClick={() => onClickBook(item.id)}>More</Button>\r\n                </CardActions>\r\n            </Card>\r\n        </Grid>\r\n    ));\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={2} sx={{ py: '25px' }}>\r\n                {booksArray}\r\n            </Grid>\r\n            <PaginationCommon maxTotalBooks={maxTotalBooks} booksTotalItems={booksTotalItems}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchResult;","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst SearchDetails = (props) => {\r\n    const bookInfo = useSelector(state => state.searchPage.bookDetailInfo);\r\n    \r\n    const bookAuthors = bookInfo.volumeInfo.authors.length > 0 ? bookInfo.volumeInfo.authors.join(', ') : bookInfo.volumeInfo.authors;\r\n\r\n    return (\r\n        <>\r\n            <Card sx={{\r\n                width: 1,\r\n                maxWidth: 700,\r\n                minHeight: 300,\r\n                maxHeight: 600,\r\n                backgroundColor: '#282c34',\r\n                position: 'fixed', \r\n                top: '50%',\r\n                left: '50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                zIndex: 1,\r\n            }}>\r\n                <Box sx={{ display: 'flex', alignItems: 'start', position: 'relative' }}>\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        height='600'\r\n                        image={bookInfo.volumeInfo.imageLinks.medium}\r\n                        alt={bookInfo.volumeInfo.title}\r\n                        sx={{ width: 1/2 }}\r\n                    />\r\n                    <CardContent sx={{ overflowY: 'scroll', width: 1/2 }}>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                            {bookInfo.volumeInfo.title}\r\n                        </Typography>\r\n                        <Typography gutterBottom variant='subtitle1' component=\"div\">\r\n                            {bookAuthors}\r\n                        </Typography>\r\n                        <Typography gutterBottom variant=\"subtitle2\" component=\"div\">\r\n                            {bookInfo.volumeInfo.publishedDate}\r\n                        </Typography>\r\n                        <Typography variant='body2' component='div'>\r\n                            {bookInfo.volumeInfo.description}\r\n                        </Typography>\r\n                        <CardActions>\r\n                            <IconButton onClick={() => props.setIsClose(true)} sx={{position: 'absolute', top: '15px', right: '15px'}}>\r\n                                <CloseIcon color=\"primary\" fontSize=\"large\" sx={{fontWeight: '700'}}/>\r\n                            </IconButton>\r\n                        </CardActions>\r\n                    </CardContent>\r\n                </Box>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchDetails;","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { getLoginAc } from '../../redux/reducers/loginReducer';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst Header = (props) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const logOut = (e) => {\r\n        localStorage.setItem('token', '');\r\n        dispatch(getLoginAc(''));\r\n        return <Navigate to={'/login'}/>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{ flexGrow: 1}}>\r\n                <AppBar position=\"static\" sx={{backgroundColor: '#282c34' }}>\r\n                    <Toolbar sx={{backgroundColor: 'inherit' }}>\r\n                        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                            Search books\r\n                        </Typography>\r\n                        <Button color=\"inherit\" onClick={(e) => logOut(e)}>Log out</Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { getBooks, getDetailsInfoBook } from '../../redux/reducers/searchReducer';\r\nimport Search from './Search/Search';\r\nimport SearchResult from './SearchResult/SearchResult';\r\nimport SearchDetails from './SearchDetails/SearchDetails';\r\nimport PaginationCommon from '../PaginationCommon/PaginationCommon';\r\nimport Header from '../Header/Header';\r\n\r\nconst SearchPage = (props) => {\r\n    const [isDetailsInfo, setIsDetailsInfo] = useState(false);\r\n    const [isClose, setIsClose] = useState(true);\r\n    const login = useSelector(state => state.loginPage.login);\r\n    const maxTotalBooks = useSelector(state => state.searchPage.maxTotalBooks);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getBooks(maxTotalBooks));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isClose) return setIsDetailsInfo(false);\r\n    }, [isClose]);\r\n\r\n    const getDetailsInfo = async (link) => {\r\n        await dispatch(getDetailsInfoBook(link));\r\n        setIsDetailsInfo(true);\r\n        setIsClose(false);\r\n    }\r\n\r\n    if (!login) return <Navigate to={'/login'} />;\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Search />\r\n            <SearchResult getDetailsInfo={getDetailsInfo} />\r\n            {isDetailsInfo ? <SearchDetails setIsClose={(boolean) => setIsClose(boolean)} /> : null}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchPage;"],"names":["props","useState","search","setSearch","searchError","setSearchError","load","setload","books","useSelector","state","searchPage","dispatch","useDispatch","searchFormChange","e","searchValue","target","value","length","searchFormSubmit","preventDefault","getBooksBySearch","then","resolve","reject","Box","component","sx","m","mx","width","maxWidth","display","alignItems","py","noValidate","autoComplete","onSubmit","TextField","error","size","fullWidth","label","variant","type","name","onChange","helperText","LoadingButton","loading","loadingIndicator","booksTotalItems","maxTotalBooks","currentPage","setCurrentPage","useEffect","getBooks","commonCountPage","Math","ceil","Stack","Pagination","count","color","_","currentNum","searchBooks","booksResultSearch","onClickBook","link","getDetailsInfo","booksArray","map","item","key","Grid","xs","sm","md","Card","backgroundColor","borderRadius","CardMedia","height","image","volumeInfo","imageLinks","smallThumbnail","alt","title","CardContent","Typography","gutterBottom","publishedDate","CardActions","Button","onClick","id","container","spacing","bookInfo","bookDetailInfo","bookAuthors","authors","join","minHeight","maxHeight","position","top","left","transform","zIndex","medium","overflowY","description","IconButton","setIsClose","right","Close","fontSize","fontWeight","flexGrow","AppBar","Toolbar","localStorage","setItem","getLoginAc","to","isDetailsInfo","setIsDetailsInfo","isClose","login","loginPage","getDetailsInfoBook","boolean"],"sourceRoot":""}